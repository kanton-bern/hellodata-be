/*
 * SFTPGo
 * SFTPGo allows you to securely share your files over SFTP and optionally over HTTP/S, FTP/S and WebDAV as well. Several storage backends are supported and they are configurable per-user, so you can serve a local directory for a user and an S3 bucket (or part of it) for another one. SFTPGo also supports virtual folders, a virtual folder can use any of the supported storage backends. So you can have, for example, a user with the S3 backend mapping a Google Cloud Storage bucket (or part of it) on a specified path and an encrypted local filesystem on another one. Virtual folders can be private or shared among multiple users, for shared virtual folders you can define different quota limits for each user. SFTPGo supports groups to simplify the administration of multiple accounts by letting you assign settings once to a group, instead of multiple times to each individual user. The SFTPGo WebClient allows end users to change their credentials, browse and manage their files in the browser and setup two-factor authentication which works with Authy, Google Authenticator and other compatible apps. From the WebClient each authorized user can also create HTTP/S links to externally share files and folders securely, by setting limits to the number of downloads/uploads, protecting the share with a password, limiting access by source IP address, setting an automatic expiration date. 
 *
 * The version of the OpenAPI document: 2.6.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.bedag.dap.hellodata.sidecars.sftpgo.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.APIKey;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.Admin;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.BaseVirtualFolder;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.EventAction;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.EventRule;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.Group;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.Role;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.Share;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.User;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BackupData
 */
@JsonPropertyOrder({
  BackupData.JSON_PROPERTY_USERS,
  BackupData.JSON_PROPERTY_FOLDERS,
  BackupData.JSON_PROPERTY_GROUPS,
  BackupData.JSON_PROPERTY_ADMINS,
  BackupData.JSON_PROPERTY_API_KEYS,
  BackupData.JSON_PROPERTY_SHARES,
  BackupData.JSON_PROPERTY_EVENT_ACTIONS,
  BackupData.JSON_PROPERTY_EVENT_RULES,
  BackupData.JSON_PROPERTY_ROLES,
  BackupData.JSON_PROPERTY_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-10T09:15:17.190691+01:00[Europe/Warsaw]", comments = "Generator version: 7.9.0")
public class BackupData {
  public static final String JSON_PROPERTY_USERS = "users";
  private List<User> users = new ArrayList<>();

  public static final String JSON_PROPERTY_FOLDERS = "folders";
  private List<BaseVirtualFolder> folders = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<Group> groups = new ArrayList<>();

  public static final String JSON_PROPERTY_ADMINS = "admins";
  private List<Admin> admins = new ArrayList<>();

  public static final String JSON_PROPERTY_API_KEYS = "api_keys";
  private List<APIKey> apiKeys = new ArrayList<>();

  public static final String JSON_PROPERTY_SHARES = "shares";
  private List<Share> shares = new ArrayList<>();

  public static final String JSON_PROPERTY_EVENT_ACTIONS = "event_actions";
  private List<EventAction> eventActions = new ArrayList<>();

  public static final String JSON_PROPERTY_EVENT_RULES = "event_rules";
  private List<EventRule> eventRules = new ArrayList<>();

  public static final String JSON_PROPERTY_ROLES = "roles";
  private List<Role> roles = new ArrayList<>();

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public BackupData() {
  }

  public BackupData users(List<User> users) {
    
    this.users = users;
    return this;
  }

  public BackupData addUsersItem(User usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<User> getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsers(List<User> users) {
    this.users = users;
  }

  public BackupData folders(List<BaseVirtualFolder> folders) {
    
    this.folders = folders;
    return this;
  }

  public BackupData addFoldersItem(BaseVirtualFolder foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<>();
    }
    this.folders.add(foldersItem);
    return this;
  }

  /**
   * Get folders
   * @return folders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BaseVirtualFolder> getFolders() {
    return folders;
  }


  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolders(List<BaseVirtualFolder> folders) {
    this.folders = folders;
  }

  public BackupData groups(List<Group> groups) {
    
    this.groups = groups;
    return this;
  }

  public BackupData addGroupsItem(Group groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Group> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(List<Group> groups) {
    this.groups = groups;
  }

  public BackupData admins(List<Admin> admins) {
    
    this.admins = admins;
    return this;
  }

  public BackupData addAdminsItem(Admin adminsItem) {
    if (this.admins == null) {
      this.admins = new ArrayList<>();
    }
    this.admins.add(adminsItem);
    return this;
  }

  /**
   * Get admins
   * @return admins
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Admin> getAdmins() {
    return admins;
  }


  @JsonProperty(JSON_PROPERTY_ADMINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdmins(List<Admin> admins) {
    this.admins = admins;
  }

  public BackupData apiKeys(List<APIKey> apiKeys) {
    
    this.apiKeys = apiKeys;
    return this;
  }

  public BackupData addApiKeysItem(APIKey apiKeysItem) {
    if (this.apiKeys == null) {
      this.apiKeys = new ArrayList<>();
    }
    this.apiKeys.add(apiKeysItem);
    return this;
  }

  /**
   * Get apiKeys
   * @return apiKeys
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<APIKey> getApiKeys() {
    return apiKeys;
  }


  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiKeys(List<APIKey> apiKeys) {
    this.apiKeys = apiKeys;
  }

  public BackupData shares(List<Share> shares) {
    
    this.shares = shares;
    return this;
  }

  public BackupData addSharesItem(Share sharesItem) {
    if (this.shares == null) {
      this.shares = new ArrayList<>();
    }
    this.shares.add(sharesItem);
    return this;
  }

  /**
   * Get shares
   * @return shares
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Share> getShares() {
    return shares;
  }


  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShares(List<Share> shares) {
    this.shares = shares;
  }

  public BackupData eventActions(List<EventAction> eventActions) {
    
    this.eventActions = eventActions;
    return this;
  }

  public BackupData addEventActionsItem(EventAction eventActionsItem) {
    if (this.eventActions == null) {
      this.eventActions = new ArrayList<>();
    }
    this.eventActions.add(eventActionsItem);
    return this;
  }

  /**
   * Get eventActions
   * @return eventActions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EventAction> getEventActions() {
    return eventActions;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventActions(List<EventAction> eventActions) {
    this.eventActions = eventActions;
  }

  public BackupData eventRules(List<EventRule> eventRules) {
    
    this.eventRules = eventRules;
    return this;
  }

  public BackupData addEventRulesItem(EventRule eventRulesItem) {
    if (this.eventRules == null) {
      this.eventRules = new ArrayList<>();
    }
    this.eventRules.add(eventRulesItem);
    return this;
  }

  /**
   * Get eventRules
   * @return eventRules
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EventRule> getEventRules() {
    return eventRules;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventRules(List<EventRule> eventRules) {
    this.eventRules = eventRules;
  }

  public BackupData roles(List<Role> roles) {
    
    this.roles = roles;
    return this;
  }

  public BackupData addRolesItem(Role rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
   * Get roles
   * @return roles
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Role> getRoles() {
    return roles;
  }


  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public BackupData version(Integer version) {
    
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Integer version) {
    this.version = version;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupData backupData = (BackupData) o;
    return Objects.equals(this.users, backupData.users) &&
        Objects.equals(this.folders, backupData.folders) &&
        Objects.equals(this.groups, backupData.groups) &&
        Objects.equals(this.admins, backupData.admins) &&
        Objects.equals(this.apiKeys, backupData.apiKeys) &&
        Objects.equals(this.shares, backupData.shares) &&
        Objects.equals(this.eventActions, backupData.eventActions) &&
        Objects.equals(this.eventRules, backupData.eventRules) &&
        Objects.equals(this.roles, backupData.roles) &&
        Objects.equals(this.version, backupData.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(users, folders, groups, admins, apiKeys, shares, eventActions, eventRules, roles, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupData {\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    admins: ").append(toIndentedString(admins)).append("\n");
    sb.append("    apiKeys: ").append(toIndentedString(apiKeys)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    eventActions: ").append(toIndentedString(eventActions)).append("\n");
    sb.append("    eventRules: ").append(toIndentedString(eventRules)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

