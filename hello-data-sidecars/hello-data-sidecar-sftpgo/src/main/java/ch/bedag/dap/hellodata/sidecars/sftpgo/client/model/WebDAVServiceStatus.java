/*
 * SFTPGo
 * SFTPGo allows you to securely share your files over SFTP and optionally over HTTP/S, FTP/S and WebDAV as well. Several storage backends are supported and they are configurable per-user, so you can serve a local directory for a user and an S3 bucket (or part of it) for another one. SFTPGo also supports virtual folders, a virtual folder can use any of the supported storage backends. So you can have, for example, a user with the S3 backend mapping a Google Cloud Storage bucket (or part of it) on a specified path and an encrypted local filesystem on another one. Virtual folders can be private or shared among multiple users, for shared virtual folders you can define different quota limits for each user. SFTPGo supports groups to simplify the administration of multiple accounts by letting you assign settings once to a group, instead of multiple times to each individual user. The SFTPGo WebClient allows end users to change their credentials, browse and manage their files in the browser and setup two-factor authentication which works with Authy, Google Authenticator and other compatible apps. From the WebClient each authorized user can also create HTTP/S links to externally share files and folders securely, by setting limits to the number of downloads/uploads, protecting the share with a password, limiting access by source IP address, setting an automatic expiration date.
 *
 * The version of the OpenAPI document: 2.6.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.bedag.dap.hellodata.sidecars.sftpgo.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.jackson.nullable.JsonNullable;

import java.util.*;

/**
 * WebDAVServiceStatus
 */
@JsonPropertyOrder({
        WebDAVServiceStatus.JSON_PROPERTY_IS_ACTIVE,
        WebDAVServiceStatus.JSON_PROPERTY_BINDINGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-10T09:15:17.190691+01:00[Europe/Warsaw]", comments = "Generator version: 7.9.0")
public class WebDAVServiceStatus {
    public static final String JSON_PROPERTY_IS_ACTIVE = "is_active";
    public static final String JSON_PROPERTY_BINDINGS = "bindings";
    private Boolean isActive;
    private JsonNullable<List<WebDAVBinding>> bindings = JsonNullable.<List<WebDAVBinding>>undefined();

    public WebDAVServiceStatus() {
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
    }

    public WebDAVServiceStatus isActive(Boolean isActive) {

        this.isActive = isActive;
        return this;
    }

    /**
     * Get isActive
     *
     * @return isActive
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsActive() {
        return isActive;
    }

    @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    public WebDAVServiceStatus bindings(List<WebDAVBinding> bindings) {
        this.bindings = JsonNullable.<List<WebDAVBinding>>of(bindings);

        return this;
    }

    public WebDAVServiceStatus addBindingsItem(WebDAVBinding bindingsItem) {
        if (this.bindings == null || !this.bindings.isPresent()) {
            this.bindings = JsonNullable.<List<WebDAVBinding>>of(new ArrayList<>());
        }
        try {
            this.bindings.get().add(bindingsItem);
        } catch (NoSuchElementException e) {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get bindings
     *
     * @return bindings
     */
    @javax.annotation.Nullable
    @JsonIgnore

    public List<WebDAVBinding> getBindings() {
        return bindings.orElse(null);
    }

    public void setBindings(List<WebDAVBinding> bindings) {
        this.bindings = JsonNullable.<List<WebDAVBinding>>of(bindings);
    }

    @JsonProperty(JSON_PROPERTY_BINDINGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<WebDAVBinding>> getBindings_JsonNullable() {
        return bindings;
    }

    @JsonProperty(JSON_PROPERTY_BINDINGS)
    public void setBindings_JsonNullable(JsonNullable<List<WebDAVBinding>> bindings) {
        this.bindings = bindings;
    }

    @Override
    public int hashCode() {
        return Objects.hash(isActive, hashCodeNullable(bindings));
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WebDAVServiceStatus webDAVServiceStatus = (WebDAVServiceStatus) o;
        return Objects.equals(this.isActive, webDAVServiceStatus.isActive) &&
                equalsNullable(this.bindings, webDAVServiceStatus.bindings);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WebDAVServiceStatus {\n");
        sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
        sb.append("    bindings: ").append(toIndentedString(bindings)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

