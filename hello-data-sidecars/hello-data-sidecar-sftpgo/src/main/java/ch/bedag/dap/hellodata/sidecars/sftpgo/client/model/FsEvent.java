/*
 * SFTPGo
 * SFTPGo allows you to securely share your files over SFTP and optionally over HTTP/S, FTP/S and WebDAV as well. Several storage backends are supported and they are configurable per-user, so you can serve a local directory for a user and an S3 bucket (or part of it) for another one. SFTPGo also supports virtual folders, a virtual folder can use any of the supported storage backends. So you can have, for example, a user with the S3 backend mapping a Google Cloud Storage bucket (or part of it) on a specified path and an encrypted local filesystem on another one. Virtual folders can be private or shared among multiple users, for shared virtual folders you can define different quota limits for each user. SFTPGo supports groups to simplify the administration of multiple accounts by letting you assign settings once to a group, instead of multiple times to each individual user. The SFTPGo WebClient allows end users to change their credentials, browse and manage their files in the browser and setup two-factor authentication which works with Authy, Google Authenticator and other compatible apps. From the WebClient each authorized user can also create HTTP/S links to externally share files and folders securely, by setting limits to the number of downloads/uploads, protecting the share with a password, limiting access by source IP address, setting an automatic expiration date. 
 *
 * The version of the OpenAPI document: 2.6.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.bedag.dap.hellodata.sidecars.sftpgo.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.EventProtocols;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.FsEventAction;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.FsEventStatus;
import ch.bedag.dap.hellodata.sidecars.sftpgo.client.model.FsProviders;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FsEvent
 */
@JsonPropertyOrder({
  FsEvent.JSON_PROPERTY_ID,
  FsEvent.JSON_PROPERTY_TIMESTAMP,
  FsEvent.JSON_PROPERTY_ACTION,
  FsEvent.JSON_PROPERTY_USERNAME,
  FsEvent.JSON_PROPERTY_FS_PATH,
  FsEvent.JSON_PROPERTY_FS_TARGET_PATH,
  FsEvent.JSON_PROPERTY_VIRTUAL_PATH,
  FsEvent.JSON_PROPERTY_VIRTUAL_TARGET_PATH,
  FsEvent.JSON_PROPERTY_SSH_CMD,
  FsEvent.JSON_PROPERTY_FILE_SIZE,
  FsEvent.JSON_PROPERTY_ELAPSED,
  FsEvent.JSON_PROPERTY_STATUS,
  FsEvent.JSON_PROPERTY_PROTOCOL,
  FsEvent.JSON_PROPERTY_IP,
  FsEvent.JSON_PROPERTY_SESSION_ID,
  FsEvent.JSON_PROPERTY_FS_PROVIDER,
  FsEvent.JSON_PROPERTY_BUCKET,
  FsEvent.JSON_PROPERTY_ENDPOINT,
  FsEvent.JSON_PROPERTY_OPEN_FLAGS,
  FsEvent.JSON_PROPERTY_ROLE,
  FsEvent.JSON_PROPERTY_INSTANCE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-10T09:15:17.190691+01:00[Europe/Warsaw]", comments = "Generator version: 7.9.0")
public class FsEvent {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private Long timestamp;

  public static final String JSON_PROPERTY_ACTION = "action";
  private FsEventAction action;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_FS_PATH = "fs_path";
  private String fsPath;

  public static final String JSON_PROPERTY_FS_TARGET_PATH = "fs_target_path";
  private String fsTargetPath;

  public static final String JSON_PROPERTY_VIRTUAL_PATH = "virtual_path";
  private String virtualPath;

  public static final String JSON_PROPERTY_VIRTUAL_TARGET_PATH = "virtual_target_path";
  private String virtualTargetPath;

  public static final String JSON_PROPERTY_SSH_CMD = "ssh_cmd";
  private String sshCmd;

  public static final String JSON_PROPERTY_FILE_SIZE = "file_size";
  private Long fileSize;

  public static final String JSON_PROPERTY_ELAPSED = "elapsed";
  private Long elapsed;

  public static final String JSON_PROPERTY_STATUS = "status";
  private FsEventStatus status;

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private EventProtocols protocol;

  public static final String JSON_PROPERTY_IP = "ip";
  private String ip;

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  private String sessionId;

  public static final String JSON_PROPERTY_FS_PROVIDER = "fs_provider";
  private FsProviders fsProvider;

  public static final String JSON_PROPERTY_BUCKET = "bucket";
  private String bucket;

  public static final String JSON_PROPERTY_ENDPOINT = "endpoint";
  private String endpoint;

  public static final String JSON_PROPERTY_OPEN_FLAGS = "open_flags";
  private String openFlags;

  public static final String JSON_PROPERTY_ROLE = "role";
  private String role;

  public static final String JSON_PROPERTY_INSTANCE_ID = "instance_id";
  private String instanceId;

  public FsEvent() {
  }

  public FsEvent id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public FsEvent timestamp(Long timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

  /**
   * unix timestamp in nanoseconds
   * @return timestamp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public FsEvent action(FsEventAction action) {
    
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FsEventAction getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(FsEventAction action) {
    this.action = action;
  }

  public FsEvent username(String username) {
    
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }

  public FsEvent fsPath(String fsPath) {
    
    this.fsPath = fsPath;
    return this;
  }

  /**
   * Get fsPath
   * @return fsPath
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsPath() {
    return fsPath;
  }


  @JsonProperty(JSON_PROPERTY_FS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsPath(String fsPath) {
    this.fsPath = fsPath;
  }

  public FsEvent fsTargetPath(String fsTargetPath) {
    
    this.fsTargetPath = fsTargetPath;
    return this;
  }

  /**
   * Get fsTargetPath
   * @return fsTargetPath
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FS_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsTargetPath() {
    return fsTargetPath;
  }


  @JsonProperty(JSON_PROPERTY_FS_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsTargetPath(String fsTargetPath) {
    this.fsTargetPath = fsTargetPath;
  }

  public FsEvent virtualPath(String virtualPath) {
    
    this.virtualPath = virtualPath;
    return this;
  }

  /**
   * Get virtualPath
   * @return virtualPath
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVirtualPath() {
    return virtualPath;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualPath(String virtualPath) {
    this.virtualPath = virtualPath;
  }

  public FsEvent virtualTargetPath(String virtualTargetPath) {
    
    this.virtualTargetPath = virtualTargetPath;
    return this;
  }

  /**
   * Get virtualTargetPath
   * @return virtualTargetPath
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVirtualTargetPath() {
    return virtualTargetPath;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualTargetPath(String virtualTargetPath) {
    this.virtualTargetPath = virtualTargetPath;
  }

  public FsEvent sshCmd(String sshCmd) {
    
    this.sshCmd = sshCmd;
    return this;
  }

  /**
   * Get sshCmd
   * @return sshCmd
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSH_CMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSshCmd() {
    return sshCmd;
  }


  @JsonProperty(JSON_PROPERTY_SSH_CMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSshCmd(String sshCmd) {
    this.sshCmd = sshCmd;
  }

  public FsEvent fileSize(Long fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

  /**
   * Get fileSize
   * @return fileSize
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }

  public FsEvent elapsed(Long elapsed) {
    
    this.elapsed = elapsed;
    return this;
  }

  /**
   * elapsed time as milliseconds
   * @return elapsed
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELAPSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getElapsed() {
    return elapsed;
  }


  @JsonProperty(JSON_PROPERTY_ELAPSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElapsed(Long elapsed) {
    this.elapsed = elapsed;
  }

  public FsEvent status(FsEventStatus status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FsEventStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(FsEventStatus status) {
    this.status = status;
  }

  public FsEvent protocol(EventProtocols protocol) {
    
    this.protocol = protocol;
    return this;
  }

  /**
   * Get protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventProtocols getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocol(EventProtocols protocol) {
    this.protocol = protocol;
  }

  public FsEvent ip(String ip) {
    
    this.ip = ip;
    return this;
  }

  /**
   * Get ip
   * @return ip
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIp() {
    return ip;
  }


  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIp(String ip) {
    this.ip = ip;
  }

  public FsEvent sessionId(String sessionId) {
    
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }

  public FsEvent fsProvider(FsProviders fsProvider) {
    
    this.fsProvider = fsProvider;
    return this;
  }

  /**
   * Get fsProvider
   * @return fsProvider
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FS_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FsProviders getFsProvider() {
    return fsProvider;
  }


  @JsonProperty(JSON_PROPERTY_FS_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsProvider(FsProviders fsProvider) {
    this.fsProvider = fsProvider;
  }

  public FsEvent bucket(String bucket) {
    
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUCKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBucket() {
    return bucket;
  }


  @JsonProperty(JSON_PROPERTY_BUCKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBucket(String bucket) {
    this.bucket = bucket;
  }

  public FsEvent endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndpoint() {
    return endpoint;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public FsEvent openFlags(String openFlags) {
    
    this.openFlags = openFlags;
    return this;
  }

  /**
   * Get openFlags
   * @return openFlags
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_FLAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOpenFlags() {
    return openFlags;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_FLAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenFlags(String openFlags) {
    this.openFlags = openFlags;
  }

  public FsEvent role(String role) {
    
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(String role) {
    this.role = role;
  }

  public FsEvent instanceId(String instanceId) {
    
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceId() {
    return instanceId;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FsEvent fsEvent = (FsEvent) o;
    return Objects.equals(this.id, fsEvent.id) &&
        Objects.equals(this.timestamp, fsEvent.timestamp) &&
        Objects.equals(this.action, fsEvent.action) &&
        Objects.equals(this.username, fsEvent.username) &&
        Objects.equals(this.fsPath, fsEvent.fsPath) &&
        Objects.equals(this.fsTargetPath, fsEvent.fsTargetPath) &&
        Objects.equals(this.virtualPath, fsEvent.virtualPath) &&
        Objects.equals(this.virtualTargetPath, fsEvent.virtualTargetPath) &&
        Objects.equals(this.sshCmd, fsEvent.sshCmd) &&
        Objects.equals(this.fileSize, fsEvent.fileSize) &&
        Objects.equals(this.elapsed, fsEvent.elapsed) &&
        Objects.equals(this.status, fsEvent.status) &&
        Objects.equals(this.protocol, fsEvent.protocol) &&
        Objects.equals(this.ip, fsEvent.ip) &&
        Objects.equals(this.sessionId, fsEvent.sessionId) &&
        Objects.equals(this.fsProvider, fsEvent.fsProvider) &&
        Objects.equals(this.bucket, fsEvent.bucket) &&
        Objects.equals(this.endpoint, fsEvent.endpoint) &&
        Objects.equals(this.openFlags, fsEvent.openFlags) &&
        Objects.equals(this.role, fsEvent.role) &&
        Objects.equals(this.instanceId, fsEvent.instanceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, action, username, fsPath, fsTargetPath, virtualPath, virtualTargetPath, sshCmd, fileSize, elapsed, status, protocol, ip, sessionId, fsProvider, bucket, endpoint, openFlags, role, instanceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FsEvent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    fsPath: ").append(toIndentedString(fsPath)).append("\n");
    sb.append("    fsTargetPath: ").append(toIndentedString(fsTargetPath)).append("\n");
    sb.append("    virtualPath: ").append(toIndentedString(virtualPath)).append("\n");
    sb.append("    virtualTargetPath: ").append(toIndentedString(virtualTargetPath)).append("\n");
    sb.append("    sshCmd: ").append(toIndentedString(sshCmd)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    elapsed: ").append(toIndentedString(elapsed)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    fsProvider: ").append(toIndentedString(fsProvider)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    openFlags: ").append(toIndentedString(openFlags)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

