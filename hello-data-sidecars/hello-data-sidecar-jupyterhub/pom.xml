<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ch.bedag.dap.hellodata</groupId>
        <artifactId>hello-data-spring-boot-starter-parent</artifactId>
        <version>develop-SNAPSHOT</version>
        <relativePath>../../hello-data-commons/hello-data-spring-boot-starter-parent/pom.xml</relativePath>
    </parent>

    <artifactId>hello-data-sidecar-jupyterhub</artifactId>
    <version>develop-SNAPSHOT</version>

    <name>hello-data-sidecar-jupyterhub</name>

    <distributionManagement>
        <repository>
            <id>gf-sie-releases</id>
            <name>Releases vom Geschäftsfeld SIE</name>
            <url>https://nexus.mgmtbi.ch/repository/maven2-gf-sie-releases</url>
        </repository>
        <snapshotRepository>
            <id>gf-sie-snapshots</id>
            <name>Snapshots vom Geschäftsfeld SIE</name>
            <url>https://nexus.mgmtbi.ch/repository/maven2-gf-sie-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <start-class>ch.bedag.dap.hellodata.jupyterhub.sidecar.HDSidecarJupyterhub</start-class>
        <testcontainers-version>1.19.1</testcontainers-version>
        <push-docker-image-phase>post-integration-test</push-docker-image-phase>
        <springdoc.version>2.1.0</springdoc.version>
        <docker-maven-plugin.version>0.43.4</docker-maven-plugin.version>
        <git-commit-id-maven-plugin.version>5.0.0</git-commit-id-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.bedag.dap.hellodata</groupId>
            <artifactId>hello-data-sidecar-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.bedag.dap.hellodata</groupId>
            <artifactId>hello-data-nats-spring</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.bedag.dap.hellodata</groupId>
            <artifactId>hello-data-common</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.mail</groupId>
            <artifactId>jakarta.mail-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring6</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-client-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <!--yes, it's for tests only!-->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!--
                  expose the project version as a property that is in compliance with docker tag name restrictions:
                  1 to 128 characters matching the regex [A-Za-z0-9_.-]+
                  see: https://github.com/docker/docker/issues/8445
                  and: https://github.com/docker/docker/pull/8447
                -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>docker-tag-name</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>regex-property</goal>
                            </goals>
                            <configuration>
                                <name>docker.tag.name</name>
                                <value>${project.version}</value>
                                <!-- inverse match the characters allowed in docker tag names -->
                                <regex>[^A-Za-z0-9_.-]</regex>
                                <!-- empty replacement replaces all occurrences with an empty string -->
                                <!-- if no match is found, the value is a valid docker tag name -->
                                <failIfNoMatch>false</failIfNoMatch>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- use standard docker-tag latest for development-SNAPSHOT -->
                            <id>use-latest</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>regex-property</goal>
                            </goals>
                            <configuration>
                                <name>docker.tag.name</name>
                                <value>${project.version}</value>
                                <regex>develop-SNAPSHOT</regex>
                                <replacement>latest</replacement>
                                <failIfNoMatch>false</failIfNoMatch>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build-docker-image</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push-docker-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <logStdout>true</logStdout>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <layout>JAR</layout>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${git-commit-id-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipPoms>false</skipPoms>
                    <runOnlyOnce>false</runOnlyOnce>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <deployAtEnd>true</deployAtEnd>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-tag-name</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>docker.tag.name</name>
                                    <value>${project.version}</value>
                                    <!-- inverse match the characters allowed in docker tag names -->
                                    <regex>[^A-Za-z0-9_.-]</regex>
                                    <!-- empty replacement replaces all occurrences with an empty string -->
                                    <!-- if no match is found, the value is a valid docker tag name -->
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- use standard docker-tag latest for development-SNAPSHOT -->
                                <id>use-latest</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>docker.tag.name</name>
                                    <value>${project.version}</value>
                                    <regex>develop-SNAPSHOT</regex>
                                    <replacement>latest</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.43.4</version>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>push-docker-image</id>
                                <phase>${push-docker-image-phase}</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <autoPull>always</autoPull>
                            <verbose>true</verbose>
                            <logStdout>true</logStdout>
                            <images>
                                <image>
                                    <name>${docker.namespace}/hello-data-sidecar-jupyterhub:${docker.tag.name}</name>
                                    <build>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <dockerFileDir>${project.basedir}</dockerFileDir>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
